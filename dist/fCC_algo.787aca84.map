{"version":3,"sources":["romanConverter.js","telNumValidator.js","index.js"],"names":["convertToRoman","num","str","toString","splitArr","split","roman","romanArr","units","arg","tens","hundreds","thounsands","al","length","push","join","input","document","getElementById","text","onclick","e","preventDefault","innerHTML","value","telephoneCheck","phoneNum","check","test","matchCheck","match","console","log"],"mappings":"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","file":"fCC_algo.787aca84.map","sourceRoot":"..","sourcesContent":["function convertToRoman(num) {\r\n\r\n  let str = num.toString();\r\n  let splitArr = str.split(\"\");\r\n  let roman;\r\n  let romanArr = [];\r\n  function units(arg) {\r\n    switch (arg) {\r\n      case \"0\":\r\n        roman = \"\";\r\n        break;\r\n      case \"1\":\r\n        roman = \"I\";\r\n        break;\r\n      case \"2\":\r\n        roman = \"II\";\r\n        break;\r\n      case \"3\":\r\n        roman = \"III\";\r\n        break;\r\n      case \"4\":\r\n        roman = \"IV\";\r\n        break;\r\n      case \"5\":\r\n        roman = \"V\";\r\n        break;\r\n      case \"6\":\r\n        roman = \"VI\";\r\n        break;\r\n      case \"7\":\r\n        roman = \"VII\";\r\n        break;\r\n      case \"8\":\r\n        roman = \"VIII\";\r\n        break;\r\n      case \"9\":\r\n        roman = \"IX\";\r\n        break;\r\n      case \"10\":\r\n        roman = \"X\";\r\n        break;\r\n    }\r\n\r\n    return roman;\r\n  }\r\n\r\n  function tens(arg) {\r\n    switch (arg) {\r\n      case \"0\":\r\n        roman = \"\";\r\n        break;\r\n      case \"1\":\r\n        roman = \"X\";\r\n        break;\r\n      case \"2\":\r\n        roman = \"XX\";\r\n        break;\r\n      case \"3\":\r\n        roman = \"XXX\";\r\n        break;\r\n      case \"4\":\r\n        roman = \"XL\";\r\n        break;\r\n      case \"5\":\r\n        roman = \"L\";\r\n        break;\r\n      case \"6\":\r\n        roman = \"LX\";\r\n        break;\r\n      case \"7\":\r\n        roman = \"LXX\";\r\n        break;\r\n      case \"8\":\r\n        roman = \"LXXX\";\r\n        break;\r\n      case \"9\":\r\n        roman = \"XC\";\r\n        break;\r\n    }\r\n    return roman;\r\n  }\r\n\r\n  function hundreds(arg) {\r\n    switch (arg) {\r\n      case \"0\":\r\n        roman = \"\";\r\n        break;\r\n      case \"1\":\r\n        roman = \"C\";\r\n        break;\r\n      case \"2\":\r\n        roman = \"CC\";\r\n        break;\r\n      case \"3\":\r\n        roman = \"CCC\";\r\n        break;\r\n      case \"4\":\r\n        roman = \"CD\";\r\n        break;\r\n      case \"5\":\r\n        roman = \"D\";\r\n        break;\r\n      case \"6\":\r\n        roman = \"DC\";\r\n        break;\r\n      case \"7\":\r\n        roman = \"DCC\";\r\n        break;\r\n      case \"8\":\r\n        roman = \"DCCC\";\r\n        break;\r\n      case \"9\":\r\n        roman = \"CM\";\r\n        break;\r\n    }\r\n\r\n    return roman;\r\n  }\r\n\r\n  function thounsands(arg) {\r\n    switch (arg) {\r\n      case \"0\":\r\n        roman = \"\";\r\n        break;\r\n      case \"1\":\r\n        roman = \"M\";\r\n        break;\r\n      case \"2\":\r\n        roman = \"MM\";\r\n        break;\r\n      case \"3\":\r\n        roman = \"MMM\";\r\n        break;\r\n\r\n    }\r\n\r\n    return roman;\r\n  }\r\n\r\n  if (num >= 1000) {\r\n    let al = splitArr.length;\r\n\r\n    romanArr.push(thounsands(splitArr[al - 4]), hundreds(splitArr[al - 3]), tens(splitArr[al - 2]), units(splitArr[al - 1]));\r\n\r\n  }\r\n\r\n  if (num >= 100 && num < 1000) {\r\n    let al = splitArr.length;\r\n\r\n    romanArr.push(hundreds(splitArr[al - 3]), tens(splitArr[al - 2]), units(splitArr[al - 1]));\r\n\r\n  }\r\n  if (num < 100 && num > 10) {\r\n    let al = splitArr.length;\r\n\r\n    romanArr.push(tens(splitArr[al - 2]), units(splitArr[al - 1]));\r\n\r\n  }\r\n\r\n  if (num < 10) {\r\n    let al = splitArr.length;\r\n\r\n    romanArr.push(units(splitArr[al - 1]));\r\n\r\n  }\r\n\r\n  return romanArr.join(\"\");\r\n\r\n}\r\nconst input = document.getElementById(\"inputField\");\r\nconst text = document.getElementById(\"text\");\r\ndocument\r\n  .getElementById(\"romanConverter\")\r\n  .onclick = function (e) {\r\n  e.preventDefault();\r\n  text.innerHTML = convertToRoman(input.value);\r\n}\r\n","function telephoneCheck(str) {\r\n\r\n  // Good luck!\r\n  let phoneNum = /^1?\\s?(\\(\\d{3}\\)|\\d{3})[-\\s]?\\s?\\d{3}[\\s-]?\\d{4}$/;\r\n  let check = phoneNum.test(str);\r\n  let matchCheck = str.match(phoneNum);\r\n  return check;\r\n\r\n}\r\n\r\ntelephoneCheck(\"5555555555\");\r\nconsole.log(telephoneCheck(\"1 555)555-5555\"))","import romanConverter from './romanConverter';\r\nimport telNumValidation from './telNumValidator';\r\n\r\nromanConverter();\r\ntelNumValidation();"]}